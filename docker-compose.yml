version: '3'
services:
  kafka:
    hostname: kafka
    container_name: kafka
    image: apache/kafka:3.7.0
    restart: always
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
  db-recipes:
    container_name: ${RECIPES_POSTGRES_HOST}
    image: postgres:16
    restart: always
    ports:
      - ${RECIPES_POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${RECIPES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RECIPES_POSTGRES_PASSWORD}
      POSTGRES_DB: ${RECIPES_POSTGRES_DB}
  recipes-api:
    build:
      context: ./recipes-api
      dockerfile: /Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_HOST: ${RECIPES_POSTGRES_HOST}
      POSTGRES_DB: ${RECIPES_POSTGRES_DB}
      POSTGRES_USER: ${RECIPES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RECIPES_POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    depends_on:
      - db-recipes
  db-products:
    container_name: ${PRODUCTS_POSTGRES_HOST}
    image: postgres:16
    restart: always
    ports:
      - ${PRODUCTS_POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${PRODUCTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PRODUCTS_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PRODUCTS_POSTGRES_DB}
  products-api:
    build:
      context: ./products-api
      dockerfile: /Dockerfile
    ports:
      - "8081:8080"
    environment:
      POSTGRES_HOST: ${PRODUCTS_POSTGRES_HOST}
      POSTGRES_DB: ${PRODUCTS_POSTGRES_DB}
      POSTGRES_USER: ${PRODUCTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PRODUCTS_POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    depends_on:
      - db-products
      - kafka
  db-prices:
    container_name: ${PRICES_POSTGRES_HOST}
    image: postgres:16
    restart: always
    ports:
      - ${PRICES_POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${PRICES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PRICES_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PRICES_POSTGRES_DB}
  prices-api:
    build:
      context: ./prices-api
      dockerfile: /Dockerfile
    ports:
      - "8082:8080"
    environment:
      POSTGRES_HOST: ${PRICES_POSTGRES_HOST}
      POSTGRES_DB: ${PRICES_POSTGRES_DB}
      POSTGRES_USER: ${PRICES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PRICES_POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    depends_on:
      - db-prices
  magnit-api:
    build:
      context: ./magnit-api
      dockerfile: /Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - kafka